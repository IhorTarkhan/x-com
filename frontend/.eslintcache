[{"/home/ihor/IdeaProjects/x-com/frontend/src/index.tsx":"1","/home/ihor/IdeaProjects/x-com/frontend/src/App.tsx":"2","/home/ihor/IdeaProjects/x-com/frontend/src/constant/routes.ts":"3","/home/ihor/IdeaProjects/x-com/frontend/src/page/MainPage.tsx":"4","/home/ihor/IdeaProjects/x-com/frontend/src/page/TestPage.tsx":"5","/home/ihor/IdeaProjects/x-com/frontend/src/constant/environment-variables.ts":"6","/home/ihor/IdeaProjects/x-com/frontend/src/api/unitApi.tsx":"7","/home/ihor/IdeaProjects/x-com/frontend/src/api/template/usePost.tsx":"8","/home/ihor/IdeaProjects/x-com/frontend/src/api/template/useGet.tsx":"9","/home/ihor/IdeaProjects/x-com/frontend/src/api/template/usePut.tsx":"10","/home/ihor/IdeaProjects/x-com/frontend/src/api/template/useGetById.tsx":"11","/home/ihor/IdeaProjects/x-com/frontend/src/api/template/useDeleteById.tsx":"12"},{"size":197,"mtime":1608918017267,"results":"13","hashOfConfig":"14"},{"size":558,"mtime":1608842577029,"results":"15","hashOfConfig":"14"},{"size":54,"mtime":1608840370888,"results":"16","hashOfConfig":"14"},{"size":1482,"mtime":1609067968306,"results":"17","hashOfConfig":"14"},{"size":567,"mtime":1608842426598,"results":"18","hashOfConfig":"14"},{"size":68,"mtime":1608892270297,"results":"19","hashOfConfig":"14"},{"size":701,"mtime":1608918788498,"results":"20","hashOfConfig":"14"},{"size":968,"mtime":1608920309815,"results":"21","hashOfConfig":"14"},{"size":848,"mtime":1608930421623,"results":"22","hashOfConfig":"14"},{"size":982,"mtime":1608920309807,"results":"23","hashOfConfig":"14"},{"size":918,"mtime":1608920309783,"results":"24","hashOfConfig":"14"},{"size":736,"mtime":1608920309795,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1a4a7k8",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/ihor/IdeaProjects/x-com/frontend/src/index.tsx",[],["53","54"],"/home/ihor/IdeaProjects/x-com/frontend/src/App.tsx",[],"/home/ihor/IdeaProjects/x-com/frontend/src/constant/routes.ts",[],"/home/ihor/IdeaProjects/x-com/frontend/src/page/MainPage.tsx",[],"/home/ihor/IdeaProjects/x-com/frontend/src/page/TestPage.tsx",[],"/home/ihor/IdeaProjects/x-com/frontend/src/constant/environment-variables.ts",[],"/home/ihor/IdeaProjects/x-com/frontend/src/api/unitApi.tsx",[],"/home/ihor/IdeaProjects/x-com/frontend/src/api/template/usePost.tsx",[],"/home/ihor/IdeaProjects/x-com/frontend/src/api/template/useGet.tsx",[],"/home/ihor/IdeaProjects/x-com/frontend/src/api/template/usePut.tsx",["55"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const usePut = <PUT_TYPE, RESPONSE_TYPE>(\n  url: string\n): [\n  (data: PUT_TYPE) => void,\n  RESPONSE_TYPE | undefined,\n  boolean | undefined,\n  { message: string } | undefined\n] => {\n  const [puttingData, setPuttingData] = useState<PUT_TYPE>();\n  const [responseData, setResponseData] = useState<RESPONSE_TYPE>();\n  const [isLoading, setIsLoading] = useState<boolean>();\n  const [error, setError] = useState<{ message: string }>();\n\n  useEffect(() => {\n    if (!url) return;\n    if (!puttingData) return;\n    const putData = async (puttingData: PUT_TYPE) => {\n      setIsLoading(true);\n      try {\n        let resp: RESPONSE_TYPE = (await axios.put(url, puttingData)).data;\n        setResponseData(resp);\n      } catch (e) {\n        setError(e);\n      }\n      setIsLoading(false);\n    };\n    putData(puttingData);\n  }, [url, puttingData]);\n\n  return [setPuttingData, responseData, isLoading, error];\n};\n","/home/ihor/IdeaProjects/x-com/frontend/src/api/template/useGetById.tsx",["56"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nexport const useGetById = <RESPONSE_TYPE,>(\n  url: string\n): [\n  (id: number) => void,\n  RESPONSE_TYPE | undefined,\n  boolean | undefined,\n  { message: string } | undefined\n] => {\n  const [responseData, setResponseData] = useState<RESPONSE_TYPE>();\n  const [isLoading, setIsLoading] = useState<boolean>();\n  const [error, setError] = useState<{ message: string }>();\n  const [gettingId, setGettingId] = useState<number>();\n\n  useEffect(() => {\n    if (!gettingId) return;\n    const getData = async (id: number) => {\n      setIsLoading(true);\n      try {\n        let resp: RESPONSE_TYPE = (await axios.get(url + id)).data;\n        setResponseData(resp);\n      } catch (e) {\n        setError(e);\n      }\n      setIsLoading(false);\n    };\n    getData(gettingId);\n  }, [gettingId]);\n\n  return [setGettingId, responseData, isLoading, error];\n};\n","/home/ihor/IdeaProjects/x-com/frontend/src/api/template/useDeleteById.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":31,"column":6,"nodeType":"63","endLine":31,"endColumn":19,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"62","line":30,"column":6,"nodeType":"63","endLine":30,"endColumn":17,"suggestions":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["68"],["69"],"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Update the dependencies array to be: [puttingData, url]",{"range":"74","text":"75"},"Update the dependencies array to be: [gettingId, url]",{"range":"76","text":"77"},[898,911],"[puttingData, url]",[838,849],"[gettingId, url]"]